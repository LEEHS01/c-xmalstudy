<UserControl x:Class="iWaterDataCollector.View.UserControl.iWaterSettingUCView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      mc:Ignorable="d" >

    <Border HorizontalAlignment="Left" Width="600" Margin="8 20">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <CheckBox Content="자동 시작" Margin="15 0 0 10" FontSize="12" IsChecked="{Binding iWater.IsAutoConnection}" mah:CheckBoxHelper.CheckSize="15" Foreground="{DynamicResource MahApps.Brushes.Text}"/>
            
            <GroupBox Grid.Row="1" Header="파일관리" Margin="15 0 0 10" mah:ControlsHelper.ContentCharacterCasing="Normal" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Text="{Binding iWater.StorageInterval}" mah:TextBoxHelper.Watermark="Tag저장주기(분)" Margin="10 0 8 0" mah:TextBoxHelper.ClearTextButton="False" Style="{StaticResource ClearTextBoxStyle}"/>
                    <TextBox Grid.Column="1" Text="{Binding iWater.ArchiveDuration}" mah:TextBoxHelper.Watermark="Tag보관기간(일)" Margin="10 0 8 0" mah:TextBoxHelper.ClearTextButton="False" Style="{StaticResource ClearTextBoxStyle}"/>
                    <TextBox Grid.Column="2" Text="{Binding iWater.LogArchiveDuration}" mah:TextBoxHelper.Watermark="Log보관기간(일)" Margin="10 0 8 0" mah:TextBoxHelper.ClearTextButton="False" Style="{StaticResource ClearTextBoxStyle}"/>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="2" Margin="15 0 0 10" mah:ControlsHelper.ContentCharacterCasing="Normal">
                <GroupBox.Header>
                    <CheckBox Content="누실데이터 추출유무" IsChecked="{Binding iWater.UseRecovery}" mah:CheckBoxHelper.CheckSize="15" Style="{StaticResource CheckBoxStyle}"/>
                </GroupBox.Header>
                <Grid IsEnabled="{Binding iWater.UseRecovery}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Text="{Binding iWater.RecoveryMaxDuration}" mah:TextBoxHelper.Watermark="누실Tag Load 최대기간(일)" Margin="10 0 8 0" mah:TextBoxHelper.ClearTextButton="False" Style="{StaticResource ClearTextBoxStyle}"/>
                </Grid>

            </GroupBox>

            <mah:MetroHeader Grid.Row="3" Header="Server List" Margin="15 0 0 10" Foreground="{DynamicResource MahApps.Brushes.SystemControlForegroundChromeWhite}" 
                             mah:HeaderedControlHelper.HeaderFontSize="12" mah:HeaderedControlHelper.HeaderMargin="5" mah:HeaderedControlHelper.HeaderBackground="{DynamicResource MahApps.Brushes.Accent}">
                <DataGrid SelectionUnit="FullRow" SelectionMode="Single" AutoGenerateColumns="False" Margin="0 5" Height="250" HorizontalScrollBarVisibility="Auto" CanUserSortColumns="False" 
                          HeadersVisibility="Column" CanUserAddRows="False" CanUserResizeColumns="True" GridLinesVisibility="All" FontSize="12"
                          ItemsSource="{Binding DisplayServers}" ColumnHeaderStyle="{StaticResource ColumnHeaderStyle}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" 
                          SelectedItem="{Binding SelectedServer}" CurrentCell="{Binding CellInfo, Mode=OneWayToSource}" Style="{StaticResource MahApps.Styles.DataGrid}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreparingCellForEdit">
                            <i:InvokeCommandAction Command="{Binding CellEditingCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="CellEditEnding">
                            <i:InvokeCommandAction Command="{Binding CellEditCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="CurrentCellChanged">
                            <i:InvokeCommandAction Command="{Binding CurrentCellChangedCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn  Header="Is Local" Width="75" Binding="{Binding IsLocal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{DynamicResource MahApps.Styles.CheckBox.DataGrid}" ElementStyle="{DynamicResource MahApps.Styles.CheckBox.DataGrid}"/>
                        <!--<DataGridTemplateColumn Header="Is Local" Width="75">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsLocal, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            
                        </DataGridTemplateColumn>-->

                        <DataGridTextColumn Header="Node Name" Width="120" Binding="{Binding NodeName}" EditingElementStyle="{DynamicResource MahApps.Styles.TextBox.ComboBox.Editable}"/>
                        <DataGridTextColumn Header="Type" Width="100" IsReadOnly="True" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsLocal}" Value="True">
                                            <Setter Property="Text" Value="Local" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsLocal}" Value="False">
                                            <Setter Property="Text" Value="Remote" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="File Path" Width="*" IsReadOnly="True" Binding="{Binding Directory}" mah:TextBoxHelper.ClearTextButton="False"/>
                        <DataGridTemplateColumn Width="30">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Button Command="{Binding DataContext.Command, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" Style="{StaticResource IconButtonStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add Server" Command="{Binding Command}" CommandParameter="Add" />
                            <MenuItem Header="Remove" Command="{Binding Command}" CommandParameter="Remove" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </mah:MetroHeader>
        </Grid>
    </Border>
</UserControl>
